<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="TCPConfigGui" testclass="ConfigTestElement" testname="TCP Sampler Config" enabled="true">
        <stringProp name="TCPSampler.server">127.0.0.1</stringProp>
        <boolProp name="TCPSampler.reUseConnection">true</boolProp>
        <stringProp name="TCPSampler.port">50000</stringProp>
        <boolProp name="TCPSampler.nodelay">false</boolProp>
        <stringProp name="TCPSampler.timeout"></stringProp>
        <stringProp name="TCPSampler.request"></stringProp>
        <boolProp name="TCPSampler.closeConnection">false</boolProp>
        <stringProp name="TCPSampler.EolByte">\0</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Auth_Login" elementType="Argument">
            <stringProp name="Argument.name">Auth_Login</stringProp>
            <stringProp name="Argument.value">postgres</stringProp>
            <stringProp name="Argument.desc">Логин пользователя для авторизации</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Auth_Password" elementType="Argument">
            <stringProp name="Argument.name">Auth_Password</stringProp>
            <stringProp name="Argument.value">adm777</stringProp>
            <stringProp name="Argument.desc">Пароль пользователя для авторизации</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Auth_Version" elementType="Argument">
            <stringProp name="Argument.name">Auth_Version</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">Версия клиента</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="StressTest" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">1</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">100</stringProp>
          <stringProp name="RandomTimer.range">200</stringProp>
        </UniformRandomTimer>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler: Create var ID" enabled="true">
          <stringProp name="TestPlan.comments">Создание адентификатора для переменных</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String ID = UUID.randomUUID().toString().toUpperCase();
String[] Array = ID.split(&quot;-&quot;);
ID = Array[Array.length - 1];
vars.put(&quot;VarID&quot;, ID);</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: Auth" enabled="true">
          <stringProp name="TestPlan.comments">Авторизация</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;
import java.security.MessageDigest;
import java.nio.charset.StandardCharsets;

//Получаем SHA256-хэш строки
String GetSHA256(String string)
{
	MessageDigest Digest = MessageDigest.getInstance(&quot;SHA-256&quot;);
	byte[] HashBytes = Digest.digest(string.getBytes(StandardCharsets.UTF_8));

	StringBuilder string_builder = new StringBuilder();
	for (byte b : HashBytes)
	{
		string_builder.append(String.format(&quot;%02x&quot;, b));
	}
	return string_builder.toString().toUpperCase();
};

def Map =
[
	Type: &quot;Auth&quot;,
	Parameters:
		[
			Hash: GetSHA256(vars.get(&quot;Auth_Login&quot;) + vars.get(&quot;Auth_Password&quot;)),
			Version: Integer.parseInt(vars.get(&quot;Auth_Version&quot;))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: Sleep" enabled="true">
          <stringProp name="TestPlan.comments">Ожидание</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;Sleep&quot;,
	Parameters:
		[
			Timeout: 50
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GetMetaData" enabled="true">
          <stringProp name="TestPlan.comments">Получение мета-данных</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GetMetaData&quot;
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GetInternalLists" enabled="true">
          <stringProp name="TestPlan.comments">Получить список внутренних справочников</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GetInternalLists&quot;
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GetServerInfo" enabled="true">
          <stringProp name="TestPlan.comments">Получить информацию о сервере</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GetServerInfo&quot;
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: OrganizationFromINN" enabled="true">
          <stringProp name="TestPlan.comments">Поиск организации по ИНН</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;OrganizationFromINN&quot;,
	Parameters:
		[
			INN: &quot;2634100802&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: SearchFullText" enabled="true">
          <stringProp name="TestPlan.comments">Полнотекстовый поиск</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;SearchFullText&quot;,
	Parameters:
		[
			Value: &quot;postgres&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GetTableData" enabled="true">
          <stringProp name="TestPlan.comments">Получить данные из таблицы</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GetTableData&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GetTableQuery" enabled="true">
          <stringProp name="TestPlan.comments">Получить данные запроса</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GetTableQuery&quot;,
	Parameters:
		[
			QueryName: &quot;PGSettings&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: UserSettingsReset" enabled="true">
          <stringProp name="TestPlan.comments">Сброс настроек пользователя</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;UserSettingsReset&quot;
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordAdd (User)" enabled="true">
          <stringProp name="TestPlan.comments">Добавление пользователя</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordAdd&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			IsCopy: false,
			Values:
				[
					FIO: UUID.randomUUID().toString(),
					Login: UUID.randomUUID().toString(),
					AccessAllowed: true
				]
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.json.JSONObject;

//Получаем ответ
String JsonString = prev.getResponseDataAsString();
int Pos = JsonString.indexOf(&apos;.&apos;);
if (Pos != -1)
{
	JsonString = JsonString.substring(Pos + 1);
	JSONObject JsonObject = new JSONObject(JsonString);
	JsonObject = JsonObject.getJSONObject(&quot;Parameters&quot;);
	int UserID = JsonObject.getInt(&quot;ObjectID&quot;);
	vars.put(&quot;UserID&quot; + vars.get(&quot;VarID&quot;), Integer.toString(UserID));
}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordGet (User)" enabled="true">
          <stringProp name="TestPlan.comments">Получение пользователя</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordGet&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			ObjectID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordEdit (User)" enabled="true">
          <stringProp name="TestPlan.comments">Изменение пользователя</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordEdit&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			ObjectID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;))),
			Values:
				[
					FIO: &quot;Edited&quot;
				]
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordGetInfo (User)" enabled="true">
          <stringProp name="TestPlan.comments">Получить системную информацию о пользователе</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordGetInfo&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			ObjectID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: UserPasswordExist" enabled="true">
          <stringProp name="TestPlan.comments">Проверка наличия пароля у пользователя</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;UserPasswordExist&quot;,
	Parameters:
		[
			UserID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: UserPasswordCreate" enabled="true">
          <stringProp name="TestPlan.comments">Создание пароля пользователю</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;
import java.security.MessageDigest;
import java.nio.charset.StandardCharsets;

//Получаем SHA256-хэш строки
String GetSHA256(String string)
{
	MessageDigest Digest = MessageDigest.getInstance(&quot;SHA-256&quot;);
	byte[] HashBytes = Digest.digest(string.getBytes(StandardCharsets.UTF_8));

	StringBuilder string_builder = new StringBuilder();
	for (byte b : HashBytes)
	{
		string_builder.append(String.format(&quot;%02x&quot;, b));
	}
	return string_builder.toString().toUpperCase();
};

def Map =
[
	Type: &quot;UserPasswordCreate&quot;,
	Parameters:
		[
			UserID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;))),
			Hash: GetSHA256(&quot;Testov_Test_Testovich454Trendy_)&quot;)
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: UserPasswordEdit" enabled="true">
          <stringProp name="TestPlan.comments">Изменение пароля пользователя</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;
import java.security.MessageDigest;
import java.nio.charset.StandardCharsets;

//Получаем SHA256-хэш строки
String GetSHA256(String string)
{
	MessageDigest Digest = MessageDigest.getInstance(&quot;SHA-256&quot;);
	byte[] HashBytes = Digest.digest(string.getBytes(StandardCharsets.UTF_8));

	StringBuilder string_builder = new StringBuilder();
	for (byte b : HashBytes)
	{
		string_builder.append(String.format(&quot;%02x&quot;, b));
	}
	return string_builder.toString().toUpperCase();
};

def Map =
[
	Type: &quot;UserPasswordEdit&quot;,
	Parameters:
		[
			UserID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;))),
			HashOld: GetSHA256(&quot;Testov_Test_Testovich454Trendy_)&quot;),
			Hash: GetSHA256(&quot;Testov_Test_Testovich454Trendy__)&quot;)
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: UserPasswordReset" enabled="true">
          <stringProp name="TestPlan.comments">Сброс пароля пользователя</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;UserPasswordReset&quot;,
	Parameters:
		[
			UserID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: DiscussionAdd" enabled="true">
          <stringProp name="TestPlan.comments">Добавить обсуждение</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;DiscussionAdd&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			ObjectID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;))),
			Message: UUID.randomUUID().toString()
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.json.JSONObject;

//Получаем ответ
String JsonString = prev.getResponseDataAsString();
int Pos = JsonString.indexOf(&apos;.&apos;);
if (Pos != -1)
{
	JsonString = JsonString.substring(Pos + 1);
	JSONObject JsonObject = new JSONObject(JsonString);
	JsonObject = JsonObject.getJSONObject(&quot;Parameters&quot;);
	int DiscussionID = JsonObject.getInt(&quot;ID&quot;);
	vars.put(&quot;DiscussionID&quot; + vars.get(&quot;VarID&quot;), Integer.toString(DiscussionID));
}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: DiscussionEdit" enabled="true">
          <stringProp name="TestPlan.comments">Изменить обсуждение</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;DiscussionEdit&quot;,
	Parameters:
		[
			ID: Integer.parseInt(vars.get(&quot;DiscussionID&quot; + vars.get(&quot;VarID&quot;))),
			Message: &quot;Hello world! 2&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: DiscussionCopy" enabled="true">
          <stringProp name="TestPlan.comments">Создать копию обсуждения</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;DiscussionCopy&quot;,
	Parameters:
		[
			ID: Integer.parseInt(vars.get(&quot;DiscussionID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.json.JSONObject;

//Получаем ответ
String JsonString = prev.getResponseDataAsString();
int Pos = JsonString.indexOf(&apos;.&apos;);
if (Pos != -1)
{
	JsonString = JsonString.substring(Pos + 1);
	JSONObject JsonObject = new JSONObject(JsonString);
	JsonObject = JsonObject.getJSONObject(&quot;Parameters&quot;);
	int DiscussionCopyID = JsonObject.getInt(&quot;ID&quot;);
	vars.put(&quot;DiscussionCopyID&quot; + vars.get(&quot;VarID&quot;), Integer.toString(DiscussionCopyID));
}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordDelete (Discussion)" enabled="true">
          <stringProp name="TestPlan.comments">Удаление обсуждений</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordDelete&quot;,
	Parameters:
		[
			TableName: &quot;_Discussion&quot;,
			Objects:
				[
					Integer.parseInt(vars.get(&quot;DiscussionID&quot; + vars.get(&quot;VarID&quot;))),
					Integer.parseInt(vars.get(&quot;DiscussionCopyID&quot; + vars.get(&quot;VarID&quot;)))
				]
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: SetNoteRecord" enabled="true">
          <stringProp name="TestPlan.comments">Изменить примечание</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;SetNoteRecord&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			ObjectID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;))),
			Note: UUID.randomUUID().toString()
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GetNoteRecord" enabled="true">
          <stringProp name="TestPlan.comments">Получить примечание</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GetNoteRecord&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			ObjectID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GetRecordValue" enabled="true">
          <stringProp name="TestPlan.comments">Получить значение записи</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GetRecordValue&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			FieldName: &quot;Login&quot;,
			ObjectID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordFavoriteAdd" enabled="true">
          <stringProp name="TestPlan.comments">Добавить запись в избранное</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordFavoriteAdd&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			ObjectID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GetFavoriteNames" enabled="true">
          <stringProp name="TestPlan.comments">Получить избранные записи</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GetFavoriteNames&quot;
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordFavoriteDelete" enabled="true">
          <stringProp name="TestPlan.comments">Удалить запись из избранного</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordFavoriteDelete&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			ObjectID: Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: FavoritesDelete (Users)" enabled="true">
          <stringProp name="TestPlan.comments">Удаление избранных записей из таблицы пользователей</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;FavoritesDelete&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: FavoritesDelete (All)" enabled="true">
          <stringProp name="TestPlan.comments">Удаление всех избранных записей</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;FavoritesDelete&quot;,
	Parameters:
		[
			Null: null //Нужно чтобы параметры были в запросе &quot;пустыми&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordDelete (User)" enabled="true">
          <stringProp name="TestPlan.comments">Удаление пользователя</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordDelete&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			Objects: [ Integer.parseInt(vars.get(&quot;UserID&quot; + vars.get(&quot;VarID&quot;))) ]
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordAdd (UserGroup)" enabled="true">
          <stringProp name="TestPlan.comments">Добавление группы пользователей</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordAdd&quot;,
	Parameters:
		[
			TableName: &quot;_UserGroup&quot;,
			IsCopy: false,
			Values:
				[
					Name: UUID.randomUUID().toString()
				]
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.json.JSONObject;

//Получаем ответ
String JsonString = prev.getResponseDataAsString();
int Pos = JsonString.indexOf(&apos;.&apos;);
if (Pos != -1)
{
	JsonString = JsonString.substring(Pos + 1);
	JSONObject JsonObject = new JSONObject(JsonString);
	JsonObject = JsonObject.getJSONObject(&quot;Parameters&quot;);
	int UserGroupID = JsonObject.getInt(&quot;ObjectID&quot;);
	vars.put(&quot;UserGroupID&quot; + vars.get(&quot;VarID&quot;), Integer.toString(UserGroupID));
}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GetGroupRights" enabled="true">
          <stringProp name="TestPlan.comments">Получить права доступа группы</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GetGroupRights&quot;,
	Parameters:
		[
			GroupID: Integer.parseInt(vars.get(&quot;UserGroupID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GroupRightSubSystemAdd" enabled="true">
          <stringProp name="TestPlan.comments">Добавить право доступа к подсистеме</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GroupRightSubSystemAdd&quot;,
	Parameters:
		[
			GroupID: Integer.parseInt(vars.get(&quot;UserGroupID&quot; + vars.get(&quot;VarID&quot;))),
			UID: &quot;{A5A596AA-1BE9-4B72-8007-C29B5D42D4B0}&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: TCP Sampler: GroupRightSubSystemDelete" enabled="true">
          <stringProp name="TestPlan.comments">Добавить право доступа к подсистеме</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GroupRightSubSystemDelete&quot;,
	Parameters:
		[
			GroupID: Integer.parseInt(vars.get(&quot;UserGroupID&quot; + vars.get(&quot;VarID&quot;))),
			UID: &quot;{A5A596AA-1BE9-4B72-8007-C29B5D42D4B0}&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GroupRightTableAdd" enabled="true">
          <stringProp name="TestPlan.comments">Добавить право доступа к подсистеме</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GroupRightTableAdd&quot;,
	Parameters:
		[
			GroupID: Integer.parseInt(vars.get(&quot;UserGroupID&quot; + vars.get(&quot;VarID&quot;))),
			TableName: &quot;_Users&quot;,
			AccessUID: &quot;{41743776-D7CE-414F-ACF3-71C42A607742}&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GroupRightTableDelete" enabled="true">
          <stringProp name="TestPlan.comments">Добавить право доступа к подсистеме</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GroupRightTableDelete&quot;,
	Parameters:
		[
			GroupID: Integer.parseInt(vars.get(&quot;UserGroupID&quot; + vars.get(&quot;VarID&quot;))),
			TableName: &quot;_Users&quot;,
			AccessUID: &quot;{41743776-D7CE-414F-ACF3-71C42A607742}&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GroupRightSpecialAdd" enabled="true">
          <stringProp name="TestPlan.comments">Добавить право доступа к подсистеме</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GroupRightSpecialAdd&quot;,
	Parameters:
		[
			GroupID: Integer.parseInt(vars.get(&quot;UserGroupID&quot; + vars.get(&quot;VarID&quot;))),
			SpecialRightUID: &quot;{6948884F-5F69-4F74-A230-A2D892A44A52}&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GroupRightSpecialDelete" enabled="true">
          <stringProp name="TestPlan.comments">Добавить право доступа к подсистеме</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GroupRightSpecialDelete&quot;,
	Parameters:
		[
			GroupID: Integer.parseInt(vars.get(&quot;UserGroupID&quot; + vars.get(&quot;VarID&quot;))),
			SpecialRightUID: &quot;{6948884F-5F69-4F74-A230-A2D892A44A52}&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordDelete (UserGroup)" enabled="true">
          <stringProp name="TestPlan.comments">Удаление группы пользователей</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordDelete&quot;,
	Parameters:
		[
			TableName: &quot;_UserGroup&quot;,
			Objects: [ Integer.parseInt(vars.get(&quot;UserGroupID&quot; + vars.get(&quot;VarID&quot;))) ]
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: FileStorageAdd" enabled="true">
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;
import java.util.UUID;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.Files;

//Читаем файл и кодируем его в base64
byte[] Bytes = Files.readAllBytes(Paths.get(System.getProperty(&quot;user.dir&quot;) + &quot;\\ApacheJMeter.jar&quot;));
String Base64String = Base64.getEncoder().encodeToString(Bytes);

def Map =
[
	Type: &quot;FileStorageAdd&quot;,
	Parameters:
		[
			FileName: UUID.randomUUID().toString(),
			Data: Base64String
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.json.JSONObject;

//Получаем ответ
String JsonString = prev.getResponseDataAsString();
int Pos = JsonString.indexOf(&apos;.&apos;);
if (Pos != -1)
{
	JsonString = JsonString.substring(Pos + 1);
	JSONObject JsonObject = new JSONObject(JsonString);
	JsonObject = JsonObject.getJSONObject(&quot;Parameters&quot;);
	int FileID = JsonObject.getInt(&quot;ID&quot;);
	vars.put(&quot;FileID&quot; + vars.get(&quot;VarID&quot;), Integer.toString(FileID));
}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: FileStorageCopy" enabled="true">
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;
import java.util.UUID;

def Map =
[
	Type: &quot;FileStorageCopy&quot;,
	Parameters:
		[
			ID: Integer.parseInt(vars.get(&quot;FileID&quot; + vars.get(&quot;VarID&quot;))),
			Name: UUID.randomUUID().toString()
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.json.JSONObject;

//Получаем ответ
String JsonString = prev.getResponseDataAsString();
int Pos = JsonString.indexOf(&apos;.&apos;);
if (Pos != -1)
{
	JsonString = JsonString.substring(Pos + 1);
	JSONObject JsonObject = new JSONObject(JsonString);
	JsonObject = JsonObject.getJSONObject(&quot;Parameters&quot;);
	int FileCopyID = JsonObject.getInt(&quot;NewID&quot;);
	vars.put(&quot;FileCopyID&quot; + vars.get(&quot;VarID&quot;), Integer.toString(FileCopyID));
}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: FileStorageGet" enabled="true">
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;
import java.util.UUID;

def Map =
[
	Type: &quot;FileStorageGet&quot;,
	Parameters:
		[
			ID: Integer.parseInt(vars.get(&quot;FileID&quot; + vars.get(&quot;VarID&quot;)))
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: RecordDelete (StorageFiles)" enabled="true">
          <stringProp name="TestPlan.comments">Удаление группы пользователей</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">false</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;RecordDelete&quot;,
	Parameters:
		[
			TableName: &quot;_StorageFiles&quot;,
			Objects:
				[
					Integer.parseInt(vars.get(&quot;FileID&quot; + vars.get(&quot;VarID&quot;))),
					Integer.parseInt(vars.get(&quot;FileCopyID&quot; + vars.get(&quot;VarID&quot;)))
				]
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: GetForeignList" enabled="true">
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">true</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;GetForeignList&quot;,
	Parameters:
		[
			TableName: &quot;_Users&quot;,
			FieldName: &quot;Group&quot;
		]
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Ping" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCP Sampler: Ping" enabled="true">
          <stringProp name="TestPlan.comments">Авторизация</stringProp>
          <stringProp name="TCPSampler.server"></stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.port"></stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request"></stringProp>
          <boolProp name="TCPSampler.closeConnection">true</boolProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonBuilder;

def Map =
[
	Type: &quot;Ping&quot;
];
String STR = new JsonBuilder(Map).toString() + &apos;\0&apos;;
sampler.setRequestData(Integer.toString(STR.length()) + &apos;.&apos; + STR);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
